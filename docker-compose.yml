version: "3.9"

services:
  library:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      GRPC_PORT: "${GRPC_PORT}"
      GRPC_GATEWAY_PORT: "${GRPC_GATEWAY_PORT}"
      POSTGRES_DB: "${POSTGRES_DB}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_PORT: "${POSTGRES_PORT}"
      POSTGRES_HOST: "${POSTGRES_HOST}"
      POSTGRES_MAX_CONN: "${POSTGRES_MAX_CONN}"
      OUTBOX_ENABLED: "${OUTBOX_ENABLED}"
      OUTBOX_WORKERS: "${OUTBOX_WORKERS}"
      OUTBOX_BATCH_SIZE: "${OUTBOX_BATCH_SIZE}"
      OUTBOX_WAIT_TIME_MS: "${OUTBOX_WAIT_TIME_MS}"
      OUTBOX_IN_PROGRESS_TTL_MS: "${OUTBOX_IN_PROGRESS_TTL_MS}"
      OUTBOX_BOOK_SEND_URL: "${OUTBOX_BOOK_SEND_URL}"
    ports:
      - "${GRPC_GATEWAY_PORT}:${GRPC_GATEWAY_PORT}"
    networks:
      - internal

  postgres:
    container_name: 'postgres'
    image: postgres:17
    restart: always
    environment:
      POSTGRES_DB: "${POSTGRES_DB}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_PORT: "${POSTGRES_PORT}"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    command:
      - "postgres"
      - "-c"
      - "port=${POSTGRES_PORT}"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - internal

volumes:
  postgres-data:

networks:
  internal:
    driver: bridge
